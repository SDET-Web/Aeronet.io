<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');/** * The Article class is the controller used for Main article section. * * @package   controller * @version   0.01 * @since     2014-04-03 * @author    Rizwan Ali <riz@bitspro.com> */class Article extends CI_Controller {    /**     * Loading cache driver     */    function __construct(){        parent::__construct();        $this->load->driver('cache', array('backup' => 'file'));	}	/* Article List Page */    /**     * List of all articles     *     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function index()	{        $this->load->model('Model_article');		$this->Model_article->remove_article_full();		$this->load->view('head');		$this->load->view('article/list');		$this->load->view('foot');	}    /**     * Add a new artilce     *     * @param $id     * @param string $action     *     * @return view     *     * @since   2016-01-19     * @author  Rizwan Ali <riz@bitspro.com>     */    public function add(){        $this->load->model('Model_article');        redirect('article/edit/'.urlencode(base64_encode($this->Model_article->add())));    }    /**     * Edit a single artilce      *     * @param $id     * @param string $action     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function edit($id,$action = ''){        $uri_parts = explode('?', $_SERVER['REQUEST_URI'], 2);		if($this->input->get('dellink') !=''){			$this->load->model('Model_link');			$this->Model_link->disable_data_link($id,$this->input->get('dellink'));            header('Location:'.'http://' . $_SERVER['HTTP_HOST'] . $uri_parts[0]);		}		if($this->input->get('activeref')!=''){			$this->load->model('Model_link');			$this->Model_link->enable_data_link($id,$this->input->get('activeref'));            header('Location:'.'http://' . $_SERVER['HTTP_HOST'] . $uri_parts[0]);		}				if($this->input->post('action')!='' && $this->input->post('indexTitle')!=''){			$index['index_title'] = $this->input->post('indexTitle');			$index['index_data'] = base64_decode(urldecode($id));			$this->db->insert('xenon_index',$index);		}				$id_decrypted = base64_decode(urldecode($id));		$this->load->model('Model_article');		$this->load->model('Model_link');		if($action == 'refresh'){			$this->Model_article->remove_cache($id);		}		$this->Model_article->remove_article_full();		$ar = $this->Model_article->update($id);		$data['links'] = $this->Model_link->article_links($id_decrypted);        $data['data_links'] = $this->Model_link->link_articles($id_decrypted);		$data['references'] = $this->Model_link->article_references($id_decrypted);		$data['article'] = $this->Model_article->pick($id);		$data['indexs'] = $this->Model_article->index($id);		$this->load->view('head',(is_array($ar)?$ar:array()));				$this->load->view('article/edit',$data);		$this->load->view('foot');	}    /**     * List of article in popup to add as links     *     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function poplist(){		if($this->input->get('selected')!=''){			$url = base64_decode(urldecode($this->input->get('selected')));			$this->session->set_flashdata('current_article',$url);			//echo $this->session->userdata('current_article');exit();		}		$this->load->model('Model_article');		$this->Model_article->remove_article_full();		$this->load->view('head_pop');		$this->load->view('article/list-popup');		$this->load->view('foot_pop');	}		/* Article Generate Reference */    /**     * List of reference to be added to article inside as popup     *     * @param $id     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function popreference($id)	{		$this->load->model('Model_article');		$this->load->view('head_pop');				$this->load->view('article/reference-update',array('article'=>$this->Model_article->pick($id),'id'=>$id));		$this->load->view('foot_pop');	}	/* Article View	*/    /**     * Article details show cached version of article     *     * @param $id     * @param string $backup_id     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function detail($id,$backup_id = ''){		$this->load->model('Model_article');		$article = '';		if($id == 'link'){			$article = $this->Model_article->pick_link($backup_id);					}else{			$article = $this->Model_article->pick($id);		}		if($article->data_body_cache == ''){			$this->Model_article->build_article_cache($article->data_body_temp,$article->data_id);			$article = $this->Model_article->pick(urlencode(base64_encode($article->data_id)));		}        if($article->data_body_cache_gmreader == ''){            $this->Model_article->build_article_cache_gmreader($article->data_body_temp,$article->data_id);            $article = $this->Model_article->pick(urlencode(base64_encode($article->data_id)));        }        $this->load->view('head');		$this->load->view('article/detail',array('article'=>$article,'indexs'=>$this->Model_article->index($id),'references'=>$this->Model_article->reference($id)));		$this->load->view('foot');	}	/* Link Parser */    /**     * Allow     *     * @param $id     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function core($id){		$this->load->model('Model_article');		$this->load->view('head');				$this->load->view('article/link',array('article'=>$this->Model_article->pick($id),'indexs'=>$this->Model_article->index($id),'references'=>$this->Model_article->reference($id)));		$this->load->view('foot');	}		/* Cache Creator */    /**     * Creates cache of provided article by removing prvious cache generate new one and update     *     * @param string $action     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function cache($action = 'refresh'){		$all_nodes = $this->db->query('select * from xenon_data limit 1000');		foreach($all_nodes->result() as $article){			$ref_count = 0;			$dom = new DOMDocument();			$dom->loadHTML(html_entity_decode(mb_convert_encoding($article->data_body_temp,"HTML-ENTITIES","UTF-8")));			$a_tags = $dom->getElementsByTagName('a');			foreach ($a_tags as $a_tag) {				$txt = str_replace('&#38;','&amp;',str_replace('â€™', "'", $a_tag->nodeValue));				$txt = htmlentities($txt);				if($txt == 'references'){					$ref_count = $ref_count + 1;					$txt = '['.$ref_count.']';				}				echo $txt.'<br />';			}						/*$data_final['data_body_cache'] = substr($dom->saveHTML(),119,-15);			$this->db->where('data_id',$article->data_id);			$this->db->update('xenon_data',$data_final);*/		}	}    /**     * Generate Links within an article to test if system is working     *     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function links(){		$all_nodes = $this->db->query('select * from xenon_link where data_id = 0;');		foreach($all_nodes->result() as $row){			//print('update xenon_link set data_id='.$row->refe_id.' where link_id = '.$row->link_id.';');			$link = str_replace('%20', ' ', $row->link_href);			if(strpos($link,'JavaScript:XdkPopup')!== FALSE){				$link = str_replace("JavaScript:XdkPopup('",'',$row->link_href);				$link = substr($link,0,-2);			}			$this->db->query('update xenon_link set link_href = \''.$link.'\' where link_id = '.$row->link_id);			if($row->link_text == 'references'){				echo 'reference = '.$link.'<br />';			}else{				echo $row->link_text.' = '.$link.'<br />';							}		}	}    /**     * Generate Cache for GMReader     *     * @param string $start     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function generate_gmreader($start = ''){		if($start!=''){			$start = $start * 500;			$this->load->model('Model_article');			$all_data = $this->db->query("select data_id, data_body_temp from xenon_data limit ".$start.",500");			foreach($all_data->result() as $data_topic){				$dataTmp =  $data_topic->data_body_temp;				//echo '<link href="/skin/css/style.css?1378076293" type="text/css" rel="stylesheet" />';				//echo '<style>.Subheadinghdk,.listhead{font-size:18px;}.hdksubsubheading{font-size:14px;font-weight:bold;}</style>';				/*$dataTmp = $this->Model_article->build_article_temp_gmreader($data_topic->data_body_temp,$data_topic->data_id);*/				/*echo */$this->Model_article->build_article_cache_gmreader($dataTmp,$data_topic->data_id);				//echo $data_topic->data_id.'<br />';			}		}		for($i = 0;$i<12;$i++){			echo '<a href="'.site_url('article/generate_gmreader/'.$i).'">'.($i + 1).'</a>';		}			}    /**     * Generate the Temparory  data     *     * @param $id     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function build_temp($id){		$this->load->model('Model_article');		$all_data = $this->db->select("data_id, data_body")->from("xenon_data")->where("data_id",$id)->get()->row();		$this->Model_article->build_article_temp($all_data->data_body,$all_data->data_id);	}    /**     * Reverting data to previous database, this was used when we lost some data because of wrong updates     *     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function reverting_data(){		$articles = $this->db->from('xenon_data')->where('data_id',12)->get()->row();		preg_match_all("/<a.*?href=\"([^`]*?)\"([^`]*?)>([^`]*?)<\/a>/",$articles->data_body_cache,$ar);		$a_tag = $ar[0];		$a_href = $ar[1];		$a_other = $ar[2];		$a_title = $ar[3];				$a_reference_num = array();		$a_reference_link = array();					}    /**     * Clean the current website cache     *     *     * @return view     *     * @since   2014-04-03     * @author  Rizwan Ali <riz@bitspro.com>     */    public function clear(){        if($this->cache->file->clean()!==FALSE){            redirect('employee');        }else{            $this->load->view('head');            echo 'Cache deletion failed.';            $this->load->view('foot');        }    }	}